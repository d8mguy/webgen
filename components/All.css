
/* component Explanatory */

.Explanatory {
    float: right
}

.ExplanatoryText {
    z-index:5;
    font-size:12pt;
    width: 350px;
    max-width: 100%;
    position: absolute;
    padding:5px;
    top:10px;
    left:20px;
    border:solid thin black;
    background: #f0eae1;        // a slightly reddish gray
}

/* component PopupTextarea */

.PopupTAButton {
    position: relative;
    z-index: 5;
    display: inline-block;
}


/* component GridLayout */
.GridLayout {
    display:grid;
    column-gap:20px;
}

/* component HButtons */
.HButton {
    border: none;
    padding: 10px 10px;
    background-color: inherit;
}
.HButton:hover {
    background-color: #F0F0F0;
}

.HButtons {
    border: 1px solid #c0c0c0;
    background-color: lightyellow;
}
.HButtonSel {
    padding: 10px 10px;
    border: none;
    background-color: #ffff00;
    font-weight: 700;
}
.HBLeftLbl {
    padding: 4px 30px 4px 10px;
}
.HBRightLbl {
    padding: 4px 10px 4px 30px;
}

/* component HueSelectSlider */
/*
The next set of defns improve the styling of sliders, they're global because not associated with slider in any obvious way.
See https://css-tricks.com/styling-cross-browser-compatible-range-inputs-css/
*/
input[type=range] {
    -webkit-appearance: none;
    margin: 18px 0;
    background-color: transparent;
    border: 1px solid black;
}

input[type=range]::-webkit-slider-thumb {
    -webkit-appearance: none;
    border: 1px solid #000000;
    height: 22px;
    width: 8px;
    border-radius: 3px;
    background: #ffffff;
    cursor: pointer;
    margin-top: -9px;
    box-shadow: 1px 1px 1px #000000, 0px 0px 1px #0d0d0d; /* Add cool effects to your sliders! */
}

input[type=range]::-webkit-slider-runnable-track {
    height: 5px;
    cursor: pointer;
    background: transparent;
    border-radius: 1.3px;
    border: 0.2px solid #010101;
}
input[type=range]:focus::-webkit-slider-runnable-track {
    background: transparent;
}
input[type=range]::-moz-range-thumb {
    border: 1px solid #000000;
    border-radius: 3px;
    background: #ffffff;
    cursor: pointer;
}

